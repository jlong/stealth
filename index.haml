- @title = "Stealth Canvas Test"

- content_for :meta do
  %style{:type=>"text/css"}
    :sass
      body
        margin: 0
        padding: 0
        overflow: hidden
      canvas
        background: black
        padding: 0
        margin: 0
        position: absolute
  :javascript
    var Star = Class.create({
      initialize: function() {
        this.x = 0;
        this.y = 0;
        this.velocity = 1;
      },
      draw: function(context) {
        var opacity = this.velocity / 10;
        context.fillStyle = "rgba(255,255,255," + opacity + ")";
        context.fillRect(this.x, this.y, 2, 2);
      }
    });
    var stars = $A();
    for (var i = 0; i < 100; i++) stars.push(new Star());
    
    function randomizeStars() {
      var width = document.viewport.getWidth(),
          height = document.viewport.getHeight();
      for (var i = 0; i < stars.size(); i++) {
        var star = stars[i];
        star.x = Math.floor(Math.random() * width);
        star.y = Math.floor(Math.random() * height);
        star.velocity = Math.floor(Math.random() * 10) + 1;
      }
    }
    
    function drawStars(context) {
      for (var i = 0; i < stars.size(); i++) stars[i].draw(context);
    }
    
    function animateStars() {
      for (var i = 0; i < stars.size(); i++) {
        var star = stars[i];
        star.y = star.y + star.velocity;
        if (star.y > $canvas.height) star.y = 0;
      }
    }
    
    function resize() {
      $canvas.width = document.viewport.getWidth();
      $canvas.height = document.viewport.getHeight();
      randomizeStars();
    }
    
    function tick() {
      var context = $canvas.getContext('2d');
      context.clearRect(0, 0, $canvas.width, $canvas.height);
      animateStars();
      drawStars(context)
    }
    
    Event.observe(window, 'resize', resize);
    
    Event.observe(document, 'dom:loaded', function() {
      $canvas = $('canvas');
      resize();
      setInterval('tick()', 1000/24);
    });

%canvas#canvas